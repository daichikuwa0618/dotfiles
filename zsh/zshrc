# zshrc

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
    source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# embed
source $HOME/zsh/alias.zshrc
source $HOME/zsh/fzf.zshrc

# アーキテクチャによって brew を切り替える
ARCH=$(uname -m)
if [[ $ARCH == arm64 ]]; then
    echo "Current Architecture: $ARCH"
    eval $(/opt/homebrew/bin/brew shellenv)
elif [[ $ARCH == x86_64 ]]; then
    echo "Current Architecture: $ARCH"
    eval $(/usr/local/bin/brew shellenv)
fi

if [[ $ARCH = "arm64" ]]; then
  export PURE_PROMPT_SYMBOL="arm ❯"
else
  export PURE_PROMPT_SYMBOL="Intel ❯"
fi

# tig が文字化けするのでローカライズを指定しておく
export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# jenv
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

# rbenv
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

# goenv
export PATH="$HOME/.goenv/bin:$PATH"
export GOENV_DISABLE_GOPATH=1
eval "$(goenv init -)"

# mint
export PATH="$PATH:$HOME/.mint/bin"

# nix package manager
if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then
    . $HOME/.nix-profile/etc/profile.d/nix.sh;
fi

# NeoVim
export XDG_CONFIG_HOME="$HOME/.config"

function cdls() {
    # cdがaliasでループするので\をつける
    \cd "$@" && ls
}

# diff-highlight

export PATH="$PATH:/opt/homebrew/share/git-core/contrib/diff-highlight"

function gwt() {
    GIT_CDUP_DIR=`git rev-parse --path-format=absolute --git-common-dir | sed -e 's/.git//g'`
    git worktree add ${GIT_CDUP_DIR}git-worktrees/$1 -b $1
}

# tmux を自動で起動する
# ref: https://qiita.com/ssh0/items/a9956a74bff8254a606a
# if [[ ! -n $TMUX && $- == *l* ]]; then
#     # get the IDs
#     ID="`tmux list-sessions`"
#     if [[ -z "$ID" ]]; then
#         tmux new-session
#     fi
#     create_new_session="Create New Session"
#     ID="$ID\n${create_new_session}:"
#     ID="`echo $ID | $PERCOL | cut -d: -f1`"
#     if [[ "$ID" = "${create_new_session}" ]]; then
#         tmux new-session
#     elif [[ -n "$ID" ]]; then
#         tmux attach-session -t "$ID"
#     else
#         :  # Start terminal normally
#     fi
# fi

# load secure file
SECURE_FILE="$HOME/secret.zshrc"
if [[ -f $SECURE_FILE ]]; then
    source "$SECURE_FILE"
fi

# fzf
# .git を対象から除く
export FZF_DEFAULT_COMMAND='ag --hidden --ignore .git -g ""'
export FZF_DEFAULT_COMMAND='ag --hidden --ignore DerivedData -g ""'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

